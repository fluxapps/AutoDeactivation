<?php

require_once __DIR__ . "/../vendor/autoload.php";

use srag\Notifications4Plugin\AutoDeactivation\Notification\NotificationCtrl;
use srag\Notifications4Plugin\AutoDeactivation\Notification\NotificationsCtrl;
use srag\Notifications4Plugin\AutoDeactivation\Utils\Notifications4PluginTrait;
use srag\Plugins\AutoDeactivation\Utils\AutoDeactivationTrait;
use srag\DIC\AutoDeactivation\DICTrait;

/**
 * Class ilAutoDeactivationConfigGUI
 *
 * Generated by SrPluginGenerator v1.3.5
 *
 * @ilCtrl_IsCalledBy  ilAutoDeactivationConfigGUI: ilObjComponentSettingsGUIs
 * @ilCtrl_isCalledBy srag\Notifications4Plugin\AutoDeactivation\Notification\NotificationsCtrl: ilAutoDeactivationConfigGUI
 *
 * @author studer + raimann ag - Team Custom 1 <support-custom1@studer-raimann.ch>
 * @author studer + raimann ag - Team Custom 1 <support@studer-raimann.ch>
 */
class ilAutoDeactivationConfigGUI extends ilPluginConfigGUI
{

    use DICTrait;
    use AutoDeactivationTrait;
    use Notifications4PluginTrait;
    const PLUGIN_CLASS_NAME = ilAutoDeactivationPlugin::class;

    const CMD_STANDARD = self::CMD_CONFIGURE;
    const CMD_CONFIGURE = "configure";
    const CMD_UPDATE_CONFIGURE = "updateConfigure";

    const LANG_MODULE = "config";

    const TAB_CONFIGURATION = "configuration";
    const TAB_NOTIFICATION_WARNING = NotificationsCtrl::TAB_NOTIFICATIONS . '_warning';
    const TAB_NOTIFICATION_ON_DEACTIVATION = NotificationsCtrl::TAB_NOTIFICATIONS . '_on_deactivation';

    const NOTIFICATION_NAME_WARNING = 'autod_warning';
    const NOTIFICATION_NAME_DEACTIVATION = 'autod_deactivation';

    /**
     * ilAutoDeactivationConfigGUI constructor
     */
    public function __construct()
    {

    }


    /**
     * @inheritDoc
     */
    public function performCommand(/*string*/ $cmd)/*:void*/
    {
        $this->setTabs();

        $next_class = self::dic()->ctrl()->getNextClass($this);

        switch (strtolower($next_class)) {
            case strtolower(NotificationsCtrl::class):
                if (self::dic()->ctrl()->getCmd() === NotificationsCtrl::CMD_LIST_NOTIFICATIONS) {
                    self::dic()->ctrl()->redirect($this, self::CMD_STANDARD);

                    return;
                }
                $notification = self::notifications4plugin()->notifications()->getNotificationById(intval(filter_input(INPUT_GET, NotificationCtrl::GET_PARAM_NOTIFICATION_ID)));
                if ($notification !== null) {
                    switch ($notification->getName()) {
                        case self::NOTIFICATION_NAME_WARNING:
                            self::dic()->tabs()->activateTab(self::TAB_NOTIFICATION_WARNING);
                            self::notifications4plugin()->withPlaceholderTypes([
                                'user'    => 'object ' . ilObjUser::class,
                                'inactive_for_days' => 'integer',
                                'deactivation_date' => 'string'
                            ]);
                            break;

                        case self::NOTIFICATION_NAME_DEACTIVATION:
                            self::dic()->tabs()->activateTab(self::TAB_NOTIFICATION_ON_DEACTIVATION);
                            self::notifications4plugin()->withPlaceholderTypes([
                                'user'          => 'object ' . ilObjUser::class,
                            ]);
                            break;

                        default:
                            break;
                    }
                }

                self::dic()->ctrl()->forwardCommand(new NotificationsCtrl());
                break;
            default:
                $cmd = self::dic()->ctrl()->getCmd();

                switch ($cmd) {
                    case self::CMD_CONFIGURE:
                    case self::CMD_UPDATE_CONFIGURE:
                        $this->{$cmd}();
                        break;

                    default:
                        break;
                }
                break;
        }
    }


    /**
     *
     */
    protected function setTabs()/*: void*/
    {
        // config
        self::dic()->tabs()->addTab(
            self::TAB_CONFIGURATION,
            self::plugin()->translate(self::TAB_CONFIGURATION, self::LANG_MODULE),
            self::dic()->ctrl()->getLinkTargetByClass(self::class, self::CMD_CONFIGURE)
        );

        // notification (warning)
        self::dic()->ctrl()->setParameterByClass(
            NotificationCtrl::class,
            NotificationCtrl::GET_PARAM_NOTIFICATION_ID,
            self::notifications4plugin()->notifications()->getNotificationByName(self::NOTIFICATION_NAME_WARNING)->getId()
        );
        self::dic()->tabs()->addTab(
            self::TAB_NOTIFICATION_WARNING,
            self::plugin()->translate(self::TAB_NOTIFICATION_WARNING, self::LANG_MODULE),
            self::dic()->ctrl()->getLinkTargetByClass([NotificationsCtrl::class, NotificationCtrl::class], NotificationCtrl::CMD_EDIT_NOTIFICATION)
        );

        // notification (deactivation)
        self::dic()->ctrl()->setParameterByClass(
            NotificationCtrl::class,
            NotificationCtrl::GET_PARAM_NOTIFICATION_ID,
            self::notifications4plugin()->notifications()->getNotificationByName(self::NOTIFICATION_NAME_DEACTIVATION)->getId()
        );
        self::dic()->tabs()->addTab(
            self::TAB_NOTIFICATION_ON_DEACTIVATION,
            self::plugin()->translate(self::TAB_NOTIFICATION_ON_DEACTIVATION, self::LANG_MODULE),
            self::dic()->ctrl()->getLinkTargetByClass([NotificationsCtrl::class, NotificationCtrl::class], NotificationCtrl::CMD_EDIT_NOTIFICATION)
        );

        // Locator
        self::dic()->locator()->addItem(ilAutoDeactivationPlugin::PLUGIN_NAME, self::dic()->ctrl()->getLinkTarget($this, self::CMD_CONFIGURE));
    }


    /**
     *
     */
    protected function configure()/*: void*/
    {
        self::dic()->tabs()->activateTab(self::TAB_CONFIGURATION);

        $form = self::autoDeactivation()->config()->factory()->newFormInstance($this);

        self::output()->output($form);
    }


    /**
     *
     */
    protected function updateConfigure()/*: void*/
    {
        self::dic()->tabs()->activateTab(self::TAB_CONFIGURATION);

        $form = self::autoDeactivation()->config()->factory()->newFormInstance($this);

        if (!$form->storeForm()) {
            self::output()->output($form);

            return;
        }

        ilUtil::sendSuccess(self::plugin()->translate("configuration_saved", self::LANG_MODULE), true);

        self::dic()->ctrl()->redirect($this, self::CMD_CONFIGURE);
    }
}
